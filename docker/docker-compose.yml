services:
  neo4j:
    image: neo4j:${NEO4J_VERSION}
    restart: ${RESTART_POLICY}
    user: "${USER_ID}:${GROUP_ID}"
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 20s
    environment:
      - NEO4J_server_memory_heap_max__size=${NEO4J_HEAP}
      - NEO4J_server_memory_pagecache_size=${NEO4J_PAGECACHE}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_AUTH=neo4j/l3tm31n!
    volumes:
      - ${PROJECT_PATH}/docker/neo4j/data/data:/data
      - ${PROJECT_PATH}/docker/neo4j/data/logs:/logs
  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    restart: ${RESTART_POLICY}
    user: "${USER_ID}:${GROUP_ID}"
    environment:
      - TAKE_FILE_OWNERSHIP=1
      - ES_JAVA_OPTS=${ELASTICSEARCH_JVM_OPTS}
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ${PROJECT_PATH}/docker/elasticsearch/data:/usr/share/elasticsearch/data
  project:
      build:
        context: ./project
        dockerfile: ./Dockerfile
      entrypoint: /entrypoint.sh
      user: node
      restart: ${RESTART_POLICY}
      depends_on:
        neo4j: 
          condition: service_healthy
      environment:
        - MODE=dev
      volumes:
        - ${PROJECT_PATH}/docker/project/entrypoint.sh:/entrypoint.sh
        - ${PROJECT_PATH}/code:/code
        - ${PROJECT_PATH}/docker/.env:/.env
        - ${PROJECT_PATH}/docker/project/data:/var/letterbox
  letterbox:
    image: nginx:${NGINX_VERSION}
    restart: ${RESTART_POLICY}
    depends_on:
      - project
    volumes:
      - ${PROJECT_PATH}/docker/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ${PROJECT_PATH}/docker/nginx/data/pdf:/var/www/pdf